//jsp and servlets overview
  1.what are JSPs and servlets:1)java code that runs on the web server
                               2)read user's actions ... normally from html Form
                               3)performs the work
                               4)returns an HTML page that is generated dynamically
                               
//jsp hello world
  1.what is a jsp file: 1)an HTML page with some java code sprinkled in...
                        2)include dynamic content from java code
  2.where is jsp processed: 1)jsp is processed on the server
                            2)results of java code included in html returned to browser
                            
//jsp built-in server objects
  1.list of commonly used jsp objects: 1)request: contains http request headers and form data
                                       2)provides http support for sending response
                                       3)jspwriter for including content in html page
                                       4)unique session for each user of the web application
                                       5)shared data for all users of the web application
                                 
//html form overview
  1.reading form data with jsp: 1)<%= request.getParameter(formFieldName)%>
                                2)${param.formFieldName} !only used for displaying form data
                                
//jsp session object
  1.jsp session is created once for user's browser session. unique for this user
  2.commonly used when you need to keep track of the user's actions
  
//tracking user actions with sessions
  1.brooks sessionID: XXX -> session(store in memory of tomcat)
  2.add data to session object, method signature: session.setAttribute(String name, Object value)
                                                  e.g. List<String> items = new ArrayList<>();
                                                       session.setAttribute("myToDoList", items);
  3.retrieve data from session object, method signature: Object session.getAttribute(String name)
                                                         e.g. List<String> myStuff = (List<String>) 
                                                              session.getAttribute("myToDoList");
  4.other useful methods: 1)isNew(): return true if the session is new
                          2)getId(): returns the session id
                          3)invalidate(): invalidates this session and unbinds any object associated with it
                          4)setMaxInactiveInterval(long mills): sets the idle time for a session to expire
                                                                the value is supplied in milliseconds

//personalize content with cookies
  1.what is the purpose of cookies: 1)personalize a web site for a user
                                    2)keep track of user preferences
  2.what is a cookie: text data exchanged between web browser and server
  3.cookies - contents: name/ value pair
  4.cookie api - package: cookie class defined in package: javax.servlet.http
